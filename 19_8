// Fig. 19.2: LinearSearchTest.java
// Sequentially searching an array for an item.
import java.security.SecureRandom;
import java.util.Arrays;
import java.util.Scanner;

public class LinearSearchTest{
         

   
   public static int busquedaLinealRecursiva(int[] data, int key, int ini) {
	   
	   for (int i = ini; i < data.length; i++)
	         if (data[i] == key)                 
	            return i; // return index of integer   
	         else busquedaLinealRecursiva(data, key, ini+1);
	      return -1; // integer was not found
	   
   }
   public static void main(String[] args) {
      Scanner input = new Scanner(System.in);
      SecureRandom generator = new SecureRandom();

      int[] data = new int[10]; // create array

      for (int i = 0; i < data.length; i++) // populate array
         data[i] = 10 + generator.nextInt(90);

      System.out.printf("%s%n%n", Arrays.toString(data)); // display array

      // get input from user
      System.out.print("Please enter an integer value (-1 to quit): ");
      int searchInt = input.nextInt(); 

      // repeatedly input an integer; -1 terminates the program
      while (searchInt != -1)
      {
//         int position = linearSearch(data, searchInt); // perform search
         int position = busquedaLinealRecursiva(data, searchInt, 0); // perform search

         if (position == -1) // not found
            System.out.printf("%d was not found%n%n", searchInt); 
         else // found
            System.out.printf("%d was found in position %d%n%n", 
               searchInt, position);

         // get input from user
         System.out.print("Please enter an integer value (-1 to quit): ");
         searchInt = input.nextInt();
      } 
   } // end main
} // end class LinearSearchTest
